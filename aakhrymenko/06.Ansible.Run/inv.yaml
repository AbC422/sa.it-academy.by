Linux:
  vars:
    ansible_ssh_user: root
  children:
    work_hosts:
      hosts:
        work_host1:
          ansible_host: 192.168.202.19
        work_host2:
          ansible_host: 192.168.202.20
    workshop_hosts:
      hosts:
        workshop_host1:
          ansible_host: 192.168.201.10
    k8s:
      hosts:
        k8s_host1:
          ansible_host: 192.168.203.19
        k8s_host2 :
          ansible_host: 192.168.203.20

jump:
  hosts:
    jump_server:
      ansible_host: 178.124.206.53
      ansible_ssh_user: jump_sa





#[Linux:children]
#work_hosts
#workshop_hosts
#k8s

#[Linux:vars]
#ansible_ssh_user=root

#[jump]
#jump_server ansible_host=178.124.206.53 ansible_ssh_user=jump_sa

#[work_hosts]
#192.168.202.19
#192.168.202.20

#[workshop_hosts]
#192.168.201.10

#[k8s]
#192.168.203.19
#192.168.203.20








# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers.

#green.example.com
#blue.example.com
#192.168.100.1
#192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group

#[webservers]
#alpha.example.org
#beta.example.org
#192.168.1.100
#192.168.1.110

# If you have multiple hosts following a pattern you can specify
# them like this:

#www[001:006].example.com

# Ex 3: A collection of database servers in the 'dbservers' group

#[dbservers]
#
#db01.intranet.mydomain.net
#db02.intranet.mydomain.net
#10.25.1.56
#10.25.1.57

# Here's another example of host ranges, this time there are no
# leading 0s:

#db-[99:101]-node.example.com


