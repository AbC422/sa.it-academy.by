---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-nginx
  labels:
    app: service-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-nginx
  template:
    metadata:
      labels:
        app: service-nginx
    spec:
      containers:
      - name: service-nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: nginx-storage
          mountPath: "/usr/share/nginx/html"
      volumes:
      - name: nginx-storage
        persistentVolumeClaim:
          claimName: nginx-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-radarr
  labels:
    app: service-radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-radarr
  template:
    metadata:
      labels:
        app: service-radarr
    spec:
      containers:
      - name: service-radarr
        image: linuxserver/radarr
        ports:
        - containerPort: 7878
        env:
          - name: PUID
            value: "1000"
          - name: PGUID
            value: "1000"
          - name: TZ
            value: Europe/London
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
          limits:
            cpu: 250m
            memory: 250Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-sonarr
  labels:
    app: service-sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-sonarr
  template:
    metadata:
      labels:
        app: service-sonarr
    spec:
      containers:
      - name: service-sonarr
        image: linuxserver/sonarr
        ports:
        - containerPort: 8989
        env:
          - name: PUID
            value: "1000"
          - name: PGUID
            value: "1000"
          - name: TZ
            value: Europe/London
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
          limits:
            cpu: 250m
            memory: 250Mi
---
apiVersion: v1
kind: Service
metadata:
  name: service-nginx
  labels:
    run: service-nginx
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: service-nginx
---
apiVersion: v1
kind: Service
metadata:
  name: service-radarr
  labels:
    run: service-radarr
spec:
  type: LoadBalancer
  ports:
  - port: 7878
    protocol: TCP
  selector:
    app: service-radarr
---
apiVersion: v1
kind: Service
metadata:
  name: service-sonarr
  labels:
    run: service-sonarr
spec:
  type: LoadBalancer
  ports:
  - port: 8989
    protocol: TCP
  selector:
    app: service-sonarr
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-app
spec:
  backend:
    serviceName: default-http-backend
    servicePort: 80
  rules:
  - host: nginx.k8s-1.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: service-nginx
          servicePort: 80
  - host: radarr.k8s-1.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: service-radarr
          servicePort: 7878
  - host: sonarr.k8s-1.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: service-sonarr
          servicePort: 8989
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-pv-volume
  labels:
    type: nfs
    name: nginx-nfs-vol
spec:
  capacity:
    storage: 10Mi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/rartyomov/service-nginx
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-pv-claim
  labels:
    app: service-nginx
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Mi
  selector:
    matchLabels:
      name: nginx-nfs-vol
      type: nfs

